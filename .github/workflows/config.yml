name: 'terraform-Azure-srikanth'
on:
  push:
    branches:
    - main
  
env: 
    #    ROOT_PATH: 'path ::${{github.workspace}}/${{ inputs.ROOT_PATH }}'
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest
    #environment: production
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest approve
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: terraform init
      run: |
        
        terraform init 
      
    - name: terraform Plan
      run: |
        
        terraform plan
        #env: 
        #ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
        #ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
        #ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
        #ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      
  terraform_apply:
    name: 'terraform apply'
    needs: [terraform_plan]
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
 
    - name: terraform Init
      run: | 
        cd src/terraform
        terraform init
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
      working-directory: ${{ env.ROOT_PATH }}
